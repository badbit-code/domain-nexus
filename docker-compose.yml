version: '3'
services:
  database:
    image: "postgres:12.6"
    env_file:
      - ./.env # configure postgres
    ports:
      - "65056:5432"
    volumes:
      # - database_data:/var/lib/postgresql/data/ # persist data even if container shuts downvolumes:
      - ./src/container/postgresql/:/docker-entrypoint-initdb.d

  collector:
    build:
      context: ./src/container/data_collector
    env_file:
      - ./.env # configure postgres
    #ports:
    #   - "127.0.0.1:5432:65056"
    #entrypoint: bash -c "/bin/bash"
    #volumes:
    #  #- database-data:/var/lib/postgresql/data/ # persist data even if container shuts downvolumes:
    #  - ./init-scripts:/docker-entrypoint-initdb.d

  alex-meta-collector:
    build:
      context: ./src/container/meta_collectors/
      dockerfile: ./alexa/Dockerfile
    env_file:
        - ./.env

  whois-meta-collector:
    build:
      context: ./src/container/meta_collectors/
      dockerfile: ./whois/Dockerfile
    env_file:
        - ./.env

  wiki-meta-collector:
    build:
      context: ./src/container/meta_collectors/
      dockerfile: ./wiki/Dockerfile
    env_file:
        - ./.env

  public_api:
    build:
      context: ./src/container/public_api
    env_file:
      - ./.env # configure postgres
    ports:
      - "127.0.0.1:8050:5432"
    entrypoint: bash -c "/bin/bash"
    volumes:
      #- database-data:/var/lib/postgresql/data/ # persist data even if container shuts downvolumes:
      - ./init-scripts:/docker-entrypoint-initdb.d
volumes:
  database_data: # named volumes can be managed easier using docker-compose
    driver: local